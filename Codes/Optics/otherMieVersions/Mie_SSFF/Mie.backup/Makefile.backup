#$preamble
#
# http://www.webalice.it/o.drofa/davide/makefile-fortran/makefile-fortran.html
#
# A simple hand-made makefile for a package including applications
# built from Fortran 90 sources, taking into account the usual
# dependency cases.

# This makefile works with the GNU make command, the one find on
# GNU/Linux systems and often called gmake on non-GNU systems, if you
# are using an old style make command, please see the file
# Makefile_oldstyle provided with the package.


# ======================================================================
# PWDs Variables
# ======================================================================

ROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
BHMIE_PWD = $(ROOT_DIR)/../../Codes_downloaded/BohrenHuffmanMie_F90

# ======================================================================
# Let's start with the declarations
# ======================================================================

# The compiler
FC = gfortran
# flags for debugging or for maximum performance, comment as necessary
# FCFLAGS = -g -fbounds-check
FCFLAGS = -O2
# flags forall (e.g. look for system .mod files, required in gfortran)
FCFLAGS +=	-I/usr/include \
			-I$(BHMIE_PWD)

VPATH := src
BINDIR := bin

# libraries needed for linking, unused in the examples
#LDFLAGS = -li_need_this_lib

# List of executables to be built within the package
PROGRAMS = validator mybhmie_start

# "make" builds all
all: $(PROGRAMS)
	clean


#$intro
# ======================================================================
# Rules for building
# ======================================================================

mybhmie_start.o: mybhmie.mod
mybhmie_start: mybhmie.o

validator.o: mybhmie.mod bhmie.o
validator: mybhmie.o bhmie.o

#$conclusion
# ======================================================================
# And now the general rules, these should not require modification
# ======================================================================

# Create bin
$(BINDIR):
	mkdir -p $(BINDIR)

# General rule for building prog from prog.o; $^ (GNU extension) is
# used in order to list additional object files on which the
# executable depends
%: %.o
	$(FC) $(FCFLAGS) -o $@ $^ $(LDFLAGS)

# General rules for building prog.o from prog.f90 or prog.F90; $< is
# used in order to list only the first prerequisite (the source file)
# and not the additional prerequisites such as module or include files
%.o %.mod: %.f90
	$(FC) $(FCFLAGS) -c $<

%.o %.mod: %.F90
	$(FC) $(FCFLAGS) -c $<

# Utility targets
.PHONY: clean veryclean

clean:
	rm -f *.o *.mod *.MOD

veryclean: clean
	rm -f *~ $(PROGRAMS)

